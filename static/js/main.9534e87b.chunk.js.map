{"version":3,"sources":["styles/Structure.js","components/Button.js","components/AddItem.js","styles/Input.js","color-helpers.js","components/ColorBox.js","contexts/ColorsContext.js","components/Sidebar.js","components/Palette.js","App.js","serviceWorker.js","index.js"],"names":["styled","main","_templateObject","Content","div","_templateObject2","buttonColor","chroma","button","Button_templateObject","css","darken","AddItemContainer","AddItem_templateObject","AddItem","_ref","colors","addColor","react_default","a","createElement","Button","onClick","id","length","className","input","Input_templateObject","WordInput","Input_templateObject2","generateColorPalette","darkenColor","lightColor","color","_chroma$hsl","hsl","h","Object","slicedToArray","getLightnessColor","scale","mode","ColorBoxContainer","ColorBox_templateObject","ColorBox","removeColor","updateColor","selectColor","onChange","_ref2","target","objectSpread","title","value","placeholder","Input","_ref3","isValidColor","valid","paletteColors","event","preventDefault","STATE","selected","React","createContext","Container","aside","Sidebar_templateObject","Sidebar_templateObject2","Sidebar","ColorsContext","Consumer","Sidebar_Content","map","key","ColorView","Palette_templateObject","props","background","ColorsGrid","Palette_templateObject2","Palette","App","state","_this","setState","prev","concat","toConsumableArray","filter","find","data","arguments","undefined","indexColor","findIndex","Structure","Provider","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8kBAEeA,UAAOC,KAAtBC,KAQaC,EAAUH,IAAOI,IAAVC,+bCNpB,IAAMC,EAAcC,IAAO,WAEZP,MAAOQ,OAAtBC,IACgBH,EAAYI,MAmBVJ,EAAYK,OAAO,IAAID,yICtBzC,IAAME,EAAmBZ,IAAOI,IAAVS,KAMPC,EAAA,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,OAAQC,EAAVF,EAAUE,SAAV,OACbC,EAAAC,EAAAC,cAACR,EAAD,KACEM,EAAAC,EAAAC,cAACC,EAAD,CAAQC,QAAS,kBAAML,EAAS,CAACM,GAAIP,EAAOQ,OAAS,MACnDN,EAAAC,EAAAC,cAAA,KAAGK,UAAU,gBADf,seCVWzB,UAAO0B,MAAtBC,KAaaC,EAAY5B,IAAO0B,MAAVG,aCPTC,EAAuB,SAACC,GACnC,IAAMC,EAPkB,SAACC,GAAU,IAAAC,EACvB3B,IAAO0B,GAAOE,MAAnBC,EAD4BC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MAGnC,OAAO3B,IAAO,CAAC6B,EAAG,EAAG,IAAK,GAAI,OAAO1B,IAAI,OAItB6B,CAAkBR,GAErC,OAAOxB,IAAOiC,MAAM,CAClBR,EACAD,IACCU,KAAK,OAAOzB,OAAO,4NCRxB,IAAM0B,EAAoB1C,IAAOI,IAAVuC,KAYvBC,EAAA,SAAe7B,GAAoD,IAAlDkB,EAAkDlB,EAAlDkB,MAAOY,EAA2C9B,EAA3C8B,YAAaC,EAA8B/B,EAA9B+B,YAAaC,EAAiBhC,EAAjBgC,YA6BhD,OACE7B,EAAAC,EAAAC,cAACsB,EAAD,KACExB,EAAAC,EAAAC,cAAA,KAAGE,QAAS,kBAAMuB,EAAYZ,EAAMV,KAAKE,UAAU,iBACnDP,EAAAC,EAAAC,cAACQ,EAAD,CAAWoB,SA/BE,SAAAC,GAAc,IAAZC,EAAYD,EAAZC,OACjBJ,EAAYb,EAAMV,GAAPc,OAAAc,EAAA,EAAAd,CAAA,GACNJ,EADM,CAETmB,MAAOF,EAAOG,UA4BiBC,YAAY,0BAC3CpC,EAAAC,EAAAC,cAACmC,EAAD,CAAOP,SAzBM,SAAAQ,GAAc,IAAZN,EAAYM,EAAZN,OACXO,EAAeC,gBAAMR,EAAOG,OAElC,IAAKI,EACH,OAAO,EAGT,IAAME,EAAgBF,EAAe3B,EAAqBoB,EAAOG,OAAS,GAE1EP,EAAYb,EAAMV,GAAPc,OAAAc,EAAA,EAAAd,CAAA,GACNJ,EADM,CAETA,MAAOiB,EAAOG,MACdM,oBAa2BL,YAAY,eACvCpC,EAAAC,EAAAC,cAAA,UAAQE,QAVU,SAACsC,GACrBA,EAAMC,iBACNd,EAAYd,EAAMV,MAQhB,uBClDOuC,EAAQ,CACnB9C,OAAQ,GACR+C,SAAU,MAGGC,MAAMC,cAAcH,2VCDnC,IAAMI,EAAYlE,IAAOmE,MAAVC,KASTjE,EAAUH,IAAOI,IAAViE,KAMbC,EAAA,WAAe,OACbpD,EAAAC,EAAAC,cAACmD,EAAcC,SAAf,KACG,SAAAzD,GAAA,IAAEC,EAAFD,EAAEC,OAAQC,EAAVF,EAAUE,SAAU4B,EAApB9B,EAAoB8B,YAAaC,EAAjC/B,EAAiC+B,YAAaC,EAA9ChC,EAA8CgC,YAA9C,OACD7B,EAAAC,EAAAC,cAAC8C,EAAD,KACEhD,EAAAC,EAAAC,cAACqD,EAAD,KAEIzD,EAAOQ,OAAS,GAAKR,EAAO0D,IAAI,SAAAzC,GAC9B,OACEf,EAAAC,EAAAC,cAACwB,EAAD,CACE+B,IAAK1C,EAAMV,GACXU,MAAOA,EACPa,YAAaA,EACbD,YAAaA,EACbE,YAAaA,OAMvB7B,EAAAC,EAAAC,cAACN,EAAD,CACEE,OAAQA,EACRC,SAAUA,yaCtClB,IAAM2D,EAAY5E,IAAOI,IAAVyE,IAMC,SAAAC,GAAK,OAAIA,EAAMC,YAAc,gBAIvCC,EAAahF,IAAOI,IAAV6E,KAQDC,EAAA,kBACbhE,EAAAC,EAAAC,cAAC4D,EAAD,KACE9D,EAAAC,EAAAC,cAACmD,EAAcC,SAAf,KAEI,SAAAzD,GAAA,IAAEgD,EAAFhD,EAAEgD,SAAF,OACEA,GAAYA,EAASJ,cAAce,IAAI,SAAAzC,GACrC,OACEf,EAAAC,EAAAC,cAACwD,EAAD,CAAWD,IAAK1C,EAAO8C,WAAY9C,GACjCf,EAAAC,EAAAC,cAAA,YAAOa,UCmCRkD,6MAzDbC,MAAQtB,IAER7C,SAAW,SAACgB,GACVoD,EAAKC,SAAS,SAAAC,GAAI,OAAAlD,OAAAc,EAAA,EAAAd,CAAA,GACbkD,EADa,CAEhBvE,OAAM,GAAAwE,OAAAnD,OAAAoD,EAAA,EAAApD,CAAMkD,EAAKvE,QAAX,CAAmBiB,WAI7BY,YAAc,SAACtB,GACb8D,EAAKC,SAAS,SAAAC,GAAI,OAAAlD,OAAAc,EAAA,EAAAd,CAAA,GACbkD,EADa,CAEhBxB,SAAU,KACV/C,OAAQuE,EAAKvE,OAAO0E,OAAO,SAAAzD,GAAK,OAAIA,EAAMV,KAAOA,WAIrDwB,YAAc,SAACxB,GACb8D,EAAKC,SAAS,SAAAC,GAAI,OAAAlD,OAAAc,EAAA,EAAAd,CAAA,GACbkD,EADa,CAEhBxB,SAAUwB,EAAKvE,OAAO2E,KAAK,SAAA1D,GAAK,OAAIA,EAAMV,KAAOA,WAIrDuB,YAAc,SAACvB,GAAkB,IAAdqE,EAAcC,UAAArE,OAAA,QAAAsE,IAAAD,UAAA,GAAAA,UAAA,GAAP,GAClB7E,EAASqE,EAAKD,MAAMpE,OACpB+E,EAAaV,EAAKD,MAAMpE,OAAOgF,UAAU,SAAA/D,GAAK,OAAIA,EAAMV,KAAOA,IAErEP,EAAO+E,GAAcH,EAErBP,EAAKC,SAAS,SAAAC,GAAI,OAAAlD,OAAAc,EAAA,EAAAd,CAAA,GACbkD,EADa,CAEhBvE,sFAKF,OACEE,EAAAC,EAAAC,cAAC6E,EAAD,KACE/E,EAAAC,EAAAC,cAACmD,EAAc2B,SAAf,CAAwB7C,MAAKhB,OAAAc,EAAA,EAAAd,CAAA,GACxB8D,KAAKf,MADmB,CAE3BnE,SAAUkF,KAAKlF,SACf4B,YAAasD,KAAKtD,YAClBC,YAAaqD,KAAKrD,YAClBC,YAAaoD,KAAKpD,eAElB7B,EAAAC,EAAAC,cAACkD,EAAD,MACApD,EAAAC,EAAAC,cAACjB,EAAD,KACEe,EAAAC,EAAAC,cAAC8D,EAAD,gBAlDMkB,aCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9534e87b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.main`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-areas: \"sidebar main\";\n  grid-template-columns: 230px 1fr;\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  grid-area: main;\n  padding: 25px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport chroma from 'chroma-js';\n\nconst buttonColor = chroma('#22c2ca');\n\nexport default styled.button`\n  background: ${buttonColor.css()};\n  border-radius: 8px;\n  border: none;\n  padding: 12px 24px;\n  display: block;\n  width: 100%;\n  font-size: 16px;\n  color: #FFF;\n  outline: none;\n  font-weight: 500;\n  font-family: 'Rubik';\n  cursor: pointer;\n  transition: background linear .3s;\n\n  i {\n    margin-right: 6px;\n  }\n\n  &:hover {\n    background: ${buttonColor.darken(.3).css()}\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\n\nconst AddItemContainer = styled.div`\n  grid-area: add-item;\n  height: 50px;\n  padding: 15px;\n`;\n\nexport default ({colors, addColor}) => (\n  <AddItemContainer>\n    <Button onClick={() => addColor({id: colors.length + 1})}>\n      <i className=\"fas fa-plus\"></i>\n      Adicionar \n    </Button>\n  </AddItemContainer>\n);\n","import styled from 'styled-components';\n\nexport default styled.input`\n  padding: 6px 12px;\n  font-size: 16px;\n  outline: none;\n  border-radius: 5px;\n  border: 2px solid #cfd4da;\n  \n  &:focus {\n    border-color: hsl(183, 71%, 46%);\n  }\n`;\n\n\nexport const WordInput = styled.input`\n  padding: 6px 0;\n  font-size: 16px;\n  background: none;\n  outline: none;\n  border: none;\n  font-weight: 500;\n  width: 100%;\n  margin-bottom: 5px;\n`;\n","import chroma from 'chroma-js';\n\nconst getLightnessColor = (color) => {\n  const [h] = chroma(color).hsl();\n  \n  return chroma([h, 1, .97, 1], 'hsl').css('hsl');\n};\n\nexport const generateColorPalette = (darkenColor) => {\n  const lightColor = getLightnessColor(darkenColor);\n  \n  return chroma.scale([\n    lightColor, \n    darkenColor\n  ]).mode('hsl').colors(7);\n}","import React from 'react';\nimport Input, {WordInput} from '../styles/Input';\nimport styled from 'styled-components';\nimport {generateColorPalette} from '../color-helpers';\nimport {valid} from 'chroma-js';\n\nconst ColorBoxContainer = styled.div`\n  padding: 25px 15px;\n  border-bottom: 1px solid #dee2e6;\n  min-height: 60px;\n  cursor: pointer;\n\n  i.fa-times {\n    color: #cfd4da;\n  }\n`;\n\n\nexport default ({color, removeColor, updateColor, selectColor}) => {\n  const setTitle = ({target}) => {\n    updateColor(color.id, {\n      ...color,\n      title: target.value\n    });\n  };\n\n  const setColor = ({target}) => {\n    const isValidColor = valid(target.value);\n    \n    if (!isValidColor) {\n      return false;\n    }\n\n    const paletteColors = isValidColor ? generateColorPalette(target.value) : [];\n\n    updateColor(color.id, {\n      ...color,\n      color: target.value,\n      paletteColors\n    });\n  };\n\n  const selectPalette = (event) => {\n    event.preventDefault();\n    selectColor(color.id);\n  };\n\n  return (\n    <ColorBoxContainer> \n      <i onClick={() => removeColor(color.id)} className=\"fas fa-times\"></i>\n      <WordInput onChange={setTitle} placeholder=\"Nome da paleta de cor\" />\n      <Input onChange={setColor} placeholder=\"Cor escura\" />\n      <button onClick={selectPalette}>Visualizar Paleta</button>\n    </ColorBoxContainer>\n  );\n};\n","import React from 'react';\n\nexport const STATE = {\n  colors: [],\n  selected: null\n};\n\nexport default React.createContext(STATE);\n","import React from 'react';\nimport styled from 'styled-components';\nimport AddItem from './AddItem';\nimport ColorBox from './ColorBox';\nimport ColorsContext from '../contexts/ColorsContext';\n\nconst Container = styled.aside`\n  display: flex;\n  flex-direction: column;\n  grid-area: sidebar;\n  background: #FFF;\n  height: 100%;\n  border-right: 1px solid #dee2e6;\n`;\n\nconst Content = styled.div`\n  height: 100%;\n  max-height: 580px;\n  overflow-y: auto;\n`;\n\nexport default () => (\n  <ColorsContext.Consumer>\n    {({colors, addColor, removeColor, updateColor, selectColor}) => (\n    <Container>\n      <Content>\n        {\n          colors.length > 0 && colors.map(color => {\n            return (\n              <ColorBox \n                key={color.id} \n                color={color} \n                updateColor={updateColor}\n                removeColor={removeColor} \n                selectColor={selectColor} \n              />\n            );\n          })\n        }\n      </Content>\n      <AddItem \n        colors={colors} \n        addColor={addColor}\n      />\n    </Container>\n    )}\n  </ColorsContext.Consumer>\n);\n","import React, { Component } from 'react';\nimport ColorsContext from '../contexts/ColorsContext';\nimport styled from 'styled-components';\n\nconst ColorView = styled.div`\n  width: 100%;\n  height: 200px;\n  background: #FFF;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, .12);\n  background: ${props => props.background || 'transparent'};\n  position: relative;\n`;\n\nconst ColorsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-column-gap: 12px;\n  grid-row-gap: 12px;\n`;\n\n\nexport default () => (\n  <ColorsGrid>\n    <ColorsContext.Consumer>\n      {\n        ({selected}) => \n          selected && selected.paletteColors.map(color => {\n            return (\n              <ColorView key={color} background={color}>\n                <span>{color}</span>\n              </ColorView>\n            );\n        })\n      }\n    </ColorsContext.Consumer>\n  </ColorsGrid>\n);\n","import React, { Component } from 'react';\nimport Structure, {Content} from './styles/Structure';\nimport Sidebar from './components/Sidebar';\nimport ColorsContext, {STATE} from './contexts/ColorsContext';\nimport Palette from './components/Palette';\n\nclass App extends Component {\n\n  state = STATE;\n\n  addColor = (color) => {\n    this.setState(prev => ({\n      ...prev, \n      colors: [...prev.colors, color]\n    }));\n  }\n\n  removeColor = (id) => {\n    this.setState(prev => ({\n      ...prev, \n      selected: null,\n      colors: prev.colors.filter(color => color.id !== id)\n    }));\n  }\n\n  selectColor = (id) => {\n    this.setState(prev => ({\n      ...prev, \n      selected: prev.colors.find(color => color.id === id)\n    }));\n  }\n\n  updateColor = (id, data = {}) => {\n    const colors = this.state.colors;\n    const indexColor = this.state.colors.findIndex(color => color.id === id);\n\n    colors[indexColor] = data;\n\n    this.setState(prev => ({\n      ...prev, \n      colors\n    }));\n  }\n\n  render() {\n    return (\n      <Structure>\n        <ColorsContext.Provider value={{\n          ...this.state,\n          addColor: this.addColor,\n          removeColor: this.removeColor,\n          updateColor: this.updateColor,\n          selectColor: this.selectColor\n        }}>\n          <Sidebar />\n          <Content>\n            <Palette />\n          </Content>\n        </ColorsContext.Provider>\n      </Structure>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}